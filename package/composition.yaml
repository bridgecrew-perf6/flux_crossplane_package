apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: flux-terraform
  labels:
    provider: terraform
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: ijuned.com/v1alpha1
    kind: Flux
  patchSets:
    - name: Common
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
    - name: ProviderName
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
  resources:
    - name: terraform
      base:
        apiVersion: tf.crossplane.io/v1alpha1
        kind: ProviderConfig
        spec:
          credentials:
          - filename: kubeconfig.yaml
            source: Secret
            secretRef:
              namespace: crossplane-system
              name: cluster-config
              key: kubeconfig
          configuration: |
            terraform {
              required_version = ">= 0.13"
              backend "kubernetes" {
              secret_suffix    = "state"
              config_path      = "kubeconfig.yaml"
            }
              required_providers {
                kubectl = {
                  source  = "gavinbunney/kubectl"
                  version = ">= 1.13.1"
                }
                flux = {
                  source  = "fluxcd/flux"
                  version = ">= 0.8.1"
                }
              }
            }
            provider "flux" {}
            provider "kubectl" {
              config_path = "kubeconfig.yaml"
            }
      patches:
      - type: PatchSet
        patchSetName: Common

      - type: FromCompositeFieldPath
        fromFieldPath: "spec.kubeConfig.secretNamespace"
        toFieldPath: "spec.credentials[0].secretRef.namespace"
      - type: FromCompositeFieldPath
        fromFieldPath: "spec.kubeConfig.secretName"
        toFieldPath: "spec.credentials[0].secretRef.name"
      - type: FromCompositeFieldPath
        fromFieldPath: "spec.kubeConfig.secretKey"
        toFieldPath: "spec.credentials[0].secretRef.key"
      readinessChecks:
        - type: None

    - name: terraform-flux
      base:
        apiVersion: tf.crossplane.io/v1alpha1
        kind: Workspace
        spec:
          forProvider:
            source: Inline
            module: |
              
              variable "flux_version" {
                type = string
              }
              variable "image_registry" {
                type = string
              }
              variable "image_pull_secret" {
                type = string
              }

              data "flux_install" "main" {
                target_path        = "dev"
                image_pull_secrets = var.image_pull_secret
                registry           = var.image_registry
                version            = var.flux_version
              }
              data "kubectl_file_documents" "docs" {
                content = data.flux_install.main.content
              }
              resource "kubectl_manifest" "test" {
                count     = length(data.kubectl_file_documents.docs.documents)
                yaml_body = element(data.kubectl_file_documents.docs.documents, count.index)
              }
            vars:
              # We patch in the values for these variables below.
              - key: flux_version
              - key: image_registry
              - key: image_pull_secret
              
      patches:
        - type: PatchSet
          patchSetName: Common
        - type: PatchSet
          patchSetName: ProviderName
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.annotations[crossplane.io/external-name]"
          toFieldPath: "metadata.annotations[crossplane.io/external-name]"

        - type: FromCompositeFieldPath
          fromFieldPath: "spec.parameters.flux_version"
          toFieldPath: "spec.forProvider.vars[0].value"
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.parameters.image_registry"
          toFieldPath: "spec.forProvider.vars[1].value"
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.parameters.image_pull_secret"
          toFieldPath: "spec.forProvider.vars[2].value"

        - type: ToCompositeFieldPath
          fromFieldPath: spec.forProvider.vars[2].value
          toFieldPath: status.version
      readinessChecks:
        - type: None